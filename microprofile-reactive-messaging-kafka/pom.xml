<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.wildfly.quickstarts</groupId>
        <artifactId>quickstart-parent</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>24.0.1.Final-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <artifactId>microprofile-reactive-messaging-kafka</artifactId>
    <packaging>war</packaging>

    <name>Quickstart: microprofile-reactive-messaging-kafka</name>

    <properties>
        <!-- Test dependencies versions -->
        <version.io.rest-assured>4.3.1</version.io.rest-assured>
        <version.org.apache.kafka>2.7.0</version.org.apache.kafka>
        <version.org.jboss.jboss-dmr>1.5.1.Final</version.org.jboss.jboss-dmr>
        <version.org.springframework.kafka>2.6.4</version.org.springframework.kafka>
        <!-- Plugin versions -->
        <version.server.bootable-jar>24.0.0.Final</version.server.bootable-jar>
        <version.wildfly-jar.maven.plugin>5.0.2.Final</version.wildfly-jar.maven.plugin>
        <version.jkube.maven.plugin>1.0.1</version.jkube.maven.plugin>
        <jkube.generator.from>registry.redhat.io/ubi8/openjdk-11:latest</jkube.generator.from>
    </properties>

    <dependencies>

        <!-- Import the CDI API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the Reactive Messaging API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>org.eclipse.microprofile.reactive.messaging</groupId>
            <artifactId>microprofile-reactive-messaging-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Reactive Streams Operators API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>org.eclipse.microprofile.reactive-streams-operators</groupId>
            <artifactId>microprofile-reactive-streams-operators-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Reactive Streams API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>org.reactivestreams</groupId>
            <artifactId>reactive-streams</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Kafka Client API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Persistence API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Annotations API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Persistence API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the JAX-RS API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Test dependencies -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- MicroProfile Reactive Messaging Kafka Connector Test Dependencies -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
            <version>${version.org.springframework.kafka}</version>
            <exclusions>
                <!--
                    This version pulls in a different version of Kafka from
                    our version of Kafka Clients
                -->
                <exclusion>
                    <groupId>org.apache.kafka</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--
            The org.springframework.kafka:spring-kafka-test dependency excludes all
             org.apache.kafka:* dependencies in the dependency management.
             Add them again here, so as not to pollute the parent pom with all these
             test dependencies
         -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <classifier>test</classifier>
            <scope>test</scope>
            <version>${version.org.apache.kafka}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-streams</artifactId>
            <scope>test</scope>
            <version>${version.org.apache.kafka}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-streams-test-utils</artifactId>
            <scope>test</scope>
            <version>${version.org.apache.kafka}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.13</artifactId>
            <scope>test</scope>
            <version>${version.org.apache.kafka}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.13</artifactId>
            <classifier>test</classifier>
            <scope>test</scope>
            <version>${version.org.apache.kafka}</version>
        </dependency>

        <!-- Other test dependencies -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
            <version>${version.io.rest-assured}</version>
        </dependency>
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-common</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-dmr</artifactId>
            <scope>test</scope>
            <version>${version.org.jboss.jboss-dmr}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>commons-logging-jboss-logging</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <configuration>
                    <!-- adds versions properties as attributes for substitutions in README.adoc source blocks -->
                    <attributes>
                        <versionServerBom>${version.server.bom}</versionServerBom>
                        <versionMicroprofileBom>${version.microprofile.bom}</versionMicroprofileBom>
                    </attributes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>bootable-jar</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-jar-maven-plugin</artifactId>
                        <version>${version.wildfly-jar.maven.plugin}</version>
                        <configuration>
                            <feature-pack-location>wildfly@maven(org.jboss.universe:community-universe)#${version.server.bootable-jar}</feature-pack-location>
                            <layers>
                                <layer>cloud-server</layer>
                                <layer>h2-default-datasource</layer>
                                <layer>microprofile-reactive-messaging-kafka</layer>
                            </layers>
                            <plugin-options>
                                <jboss-fork-embedded>true</jboss-fork-embedded>
                            </plugin-options>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>bootable-jar-openshift</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-jar-maven-plugin</artifactId>
                        <version>${version.wildfly-jar.maven.plugin}</version>
                        <configuration>
                            <feature-pack-location>wildfly@maven(org.jboss.universe:community-universe)#${version.server.bootable-jar}</feature-pack-location>
                            <layers>
                                <layer>cloud-server</layer>
                                <layer>h2-default-datasource</layer>
                                <layer>microprofile-reactive-messaging-kafka</layer>
                            </layers>
                            <plugin-options>
                                <jboss-fork-embedded>true</jboss-fork-embedded>
                            </plugin-options>
                            <cloud/>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.eclipse.jkube</groupId>
                        <artifactId>openshift-maven-plugin</artifactId>
                        <version>${version.jkube.maven.plugin}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>resource</goal>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <enricher>
                                <config>
                                    <jkube-service>
                                        <type>NodePort</type>
                                    </jkube-service>
                                </config>
                            </enricher>
                            <resources>
                                <env>
                                    <!--
                                        Set environment vars to adjust the JVM metaspace or we might end up
                                        with OutOfMemoryErrors on OpenShift
                                    -->
                                    <GC_MAX_METASPACE_SIZE>256</GC_MAX_METASPACE_SIZE>
                                    <GC_METASPACE_SIZE>96</GC_METASPACE_SIZE>
                                    <!-- Set the AMQ Streams URL to what is set up by the instructions -->
                                    <MP_MESSAGING_CONNECTOR_SMALLRYE_KAFKA_BOOTSTRAP_SERVERS>my-cluster-kafka-bootstrap:9092</MP_MESSAGING_CONNECTOR_SMALLRYE_KAFKA_BOOTSTRAP_SERVERS>
                                </env>
                            </resources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
