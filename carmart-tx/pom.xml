<?xml version="1.0"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2013, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.jboss.datagrid.quickstart</groupId>
    <artifactId>jboss-as-carmart-tx</artifactId>
    <version>8.0.0.Alpha1</version>
    <packaging>war</packaging>
    <name>Transactional CarMart</name>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>
    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following 
            message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss dependency versions -->
        <com.ocpsoft.prettyfaces.version>3.3.2</com.ocpsoft.prettyfaces.version>
        <org.jboss.weld.servlet.version>1.1.8.Final</org.jboss.weld.servlet.version>
        <com.sun.faces.jsf.impl.version>2.0.2</com.sun.faces.jsf.impl.version>

        <!-- Define the version of the JBoss BOMs we want to import to specify tested stacks. -->
        <version.jboss.bom>1.0.4.Final</version.jboss.bom>
        <!-- Alternatively, comment out the above line, and un-comment the 
            line below to use version 1.0.4.Final-redhat-3 which is a release certified 
            to work with JBoss EAP 6. It requires you have access to the JBoss EAP 6 
            maven repository. -->
        <!-- <version.jboss.bom>1.0.4.Final-redhat-3</version.jboss.bom> -->

        <!-- This is the Management URL of EWS/Tomcat, so tomcat-maven-plugin 
            can deploy this quickstart on EWS/Tomcat through this URL -->
        <tomcat.management.url>http://localhost:8080/manager/text</tomcat.management.url>

        <!-- other plugin versions -->
        <version.jboss.maven.plugin>7.3.Final</version.jboss.maven.plugin>
        <version.tomcat.maven.plugin>1.1</version.tomcat.maven.plugin>
        <version.buildhelper.maven.plugin>1.7</version.buildhelper.maven.plugin>

        <!-- other plugin versions -->
        <version.compiler.plugin>2.3.2</version.compiler.plugin>
        <version.war.plugin>2.2</version.war.plugin>

        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.6</maven.compiler.target>
        <maven.compiler.source>1.6</maven.compiler.source>
    </properties>

    <dependencyManagement>
        <!-- JBoss distributes a complete set of Java EE 6 APIs including 
            a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or 
            a collection) of artifacts. We use this here so that we always get the correct 
            versions of artifacts. Here we use the jboss-javaee-6.0-with-infinispan stack 
            and the jboss-javaee-6.0-with-transactions stack (you can read this as the 
            JBoss stack of the Java EE 6 APIs, with Infinispan and Transactions) -->
        <dependencies>
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-javaee-6.0-with-infinispan</artifactId>
                <version>${version.jboss.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-javaee-6.0-with-transactions</artifactId>
                <version>${version.jboss.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- First declare the APIs we depend on and need for compilation. 
            The dependencies with provided scope are provided by JBoss AS 7, The other 
            compiled scoped dependencies will be add to the application libraries -->

        <!-- Import the JSF API, we use provided scope as the API is included 
            in JBoss AS 7 -->
        <dependency>
            <groupId>org.jboss.spec.javax.faces</groupId>
            <artifactId>jboss-jsf-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the CDI API, we use provided scope as the API is included 
            in JBoss AS 7 -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the infinispan core -->
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- Import Prettyfaces dependency. This is a UNSUPPORTED component -->
        <dependency>
            <groupId>com.ocpsoft</groupId>
            <artifactId>prettyfaces-jsf2</artifactId>
            <version>${com.ocpsoft.prettyfaces.version}</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- Maven will append the version to the finalName (which is the 
            name given to the generated war, and hence the context root) -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.compiler.plugin}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <configuration>
                    <!-- Java EE 6 doesn't require web.xml, Maven needs to 
                        catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- This is the default profile (active by default) that uses the 
            src/local/java folder which provided local access to the cache (library mode) -->
        <profile>
            <id>library-jbossas</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- This plugin will add the src/local/java source folder -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>${version.buildhelper.maven.plugin}</version>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/jbossas/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>                    </plugin>
                    <plugin>
                        <!-- The JBoss AS plugin deploys your war to a local 
                            JBoss AS container -->
                        <!-- To use, run: mvn package jboss-as:deploy -->
                        <groupId>org.jboss.as.plugins</groupId>
                        <artifactId>jboss-as-maven-plugin</artifactId>
                        <version>${version.jboss.maven.plugin}</version>
                      </plugin>
                </plugins>
            </build>
        </profile>


        <profile>
            <!-- This profile is intended to run this quickstart on ews/tomcat. 
                It has to embed some libraries that aren't available on ews/tomcat. -->
            <id>library-tomcat</id>
            <dependencies>

                <!-- Import the JTA API -->
                <dependency>
                    <groupId>org.jboss.spec.javax.transaction</groupId>
                    <artifactId>jboss-transaction-api_1.1_spec</artifactId>
                    <scope>compile</scope>
                </dependency>

                <!-- Import the JSF 2.1 API -->
                <dependency>
                    <groupId>org.jboss.spec.javax.faces</groupId>
                    <artifactId>jboss-jsf-api_2.1_spec</artifactId>
                    <scope>compile</scope>
                </dependency>

                <!-- Import JBoss Transactions dependencies. Using the JBoss 
                    Transactions on Tomcat is an unsupported use case -->
                <dependency>
                    <groupId>org.jboss.jbossts</groupId>
                    <artifactId>jbossjta</artifactId>
                    <scope>compile</scope>
                </dependency>

                <!-- Import the WELD "uber-jar", meaning it bundles all the 
                    bits of Weld and CDI required for running in a Servlet container, for your 
                    convenience -->
                <dependency>
                    <groupId>org.jboss.weld.servlet</groupId>
                    <artifactId>weld-servlet</artifactId>
                    <version>${org.jboss.weld.servlet.version}</version>
                    <scope>compile</scope>
                </dependency>

                <!-- Import the Mojarra JSF Impl, we use runtime scope as 
                    the Impl is not included in ews/tomcat -->
                <dependency>
                    <groupId>com.sun.faces</groupId>
                    <artifactId>jsf-impl</artifactId>
                    <version>${com.sun.faces.jsf.impl.version}</version>
                    <scope>runtime</scope>
                </dependency>

            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <!-- This plugin will add the src/tomcat/java source 
                            folder -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>${version.buildhelper.maven.plugin}</version>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/tomcat/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- This plugin will add the src/main/webapp-tomcat7 
                            as webapp folder -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version.war.plugin}</version>
                        <configuration>
                            <webResources>
                                <resource>
                                    <directory>src/main/webapp-tomcat7</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                    <plugin>
                        <!-- The Tomcat Maven plugin deploys your war to 
                            a local ews/tomcat container -->
                        <!-- To use, run: mvn package tomcat:deploy -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>tomcat-maven-plugin</artifactId>
                        <version>${version.tomcat.maven.plugin}</version>
                        <configuration>
                            <server>tomcat</server>
                            <path>/${project.artifactId}</path>
                            <url>${tomcat.management.url}</url>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>

